"use strict";require("coffee-script");var path=require("path"),fs=require("fs"),EOL=require("os").EOL;var request=require("request"),open=require("open"),semver=require("semver");var pathToQUnit=path.dirname(path.relative(path.resolve(),require.resolve("qunitjs")));var module_exports=function e(l){var s="/**\n"+" * <%= pkg.name %> <%= pkg.version %>\n"+" * <%= pkg.author.url %>\n *\n"+' * Copyright <%= grunt.template.today("yyyy") %>, <%= pkg.author.name %>\n'+" * Licensed under the MIT license.\n"+" */\n\n";var r=function e(){var s="./build/api.json";var r=require("./build/parseSourceDocs");var t=require("./build/parseNodes");var a=l.file.expand("src/**/*.js");var i=r.parse(a);var o=t.structureBlocks(i);var n=JSON.stringify(o,null,4);l.file.write(s,n);l.log.writeln("Wrote api data to "+s)};function t(){this.async();var e=require("./build/api-gen/dynamic-server.js");e(l,"./build/api.json");setTimeout(function(){open("http://localhost:8080")},100)}l.initConfig({pkg:l.file.readJSON("package.json"),copy:{lib:{expand:true,flatten:true,src:pathToQUnit+"/*",dest:"tests/unit/lib/"}},usebanner:{release:{options:{position:"top",banner:s},files:{src:["dist/crafty.js"]}},dev:{options:{position:"top",banner:s},files:{src:["crafty.js"]}}},browserify:{release:{files:{"dist/crafty.js":["src/crafty.js"]},options:{transform:["brfs"]}},dev:{files:{"crafty.js":["src/crafty.js"]},options:{debug:true,transform:["brfs"]}}},watch:{files:["src/**/*.js"],tasks:["build:dev"]},uglify:{options:{banner:s},build:{src:"dist/crafty.js",dest:"dist/crafty-min.js"}},jsvalidate:{misc:["Gruntfile.js"],src:["src/**/*.js"],tests:["tests/**/*.js"],playgrounds:["playgrounds/**/*.js"],build:["build/**/*.js"],dev:["crafty.js"],release:["dist/crafty.js","dist/crafty-min.js"]},jshint:{options:{jshintrc:true,extract:"auto"},misc:["Gruntfile.js"],src:["src/**/*.js","src/**/*.html"],tests:["tests/**/*.js","tests/**/*.html","!tests/unit/lib/**/*.js"],playgrounds:["playgrounds/**/*.js","playgrounds/**/*.html"]},qunit:{browser:["tests/unit/index.html"]},"qunit-node":{options:{noglobals:true},node:{src:"tests/unit/index-headless.js",options:{setup:function e(i){i.on("testEnd",function(e){e.errors.forEach(function(e){var s=i.dump.parse(e.actual),r=i.dump.parse(e.expected),t="Actual value "+s+" does not match expected value "+r,a="Description: "+e.message+EOL+"Reason: "+t+EOL+"Stack: "+e.stack;l.log.errorlns(a)})})}}}},"saucelabs-qunit":{browser:{options:{urls:["http://localhost:8000/tests/unit/index.html"],browsers:l.file.readJSON("tests/test-browsers.json"),testname:"Cross-browser compatibility tests for CraftyJS",build:process.env.TRAVIS_BUILD_NUMBER,tags:[process.env.TRAVIS_BRANCH],identifier:process.env.TRAVIS_JOB_NUMBER,tunneled:false,public:"public",sauceConfig:{recordVideo:false,recordScreenshots:true,disablePopupHandler:true,"tunnel-identifier":process.env.TRAVIS_JOB_NUMBER,tunnelIdentifier:process.env.TRAVIS_JOB_NUMBER},throttled:5,"max-duration":480,statusCheckAttempts:150}}},webdriver:{options:{},local:{configFile:"./tests/webdriver/index-webdriver-local.js"},cloud:{configFile:"./tests/webdriver/index-webdriver-cloud.js"}},connect:{server:{options:{port:8e3,base:"."}}},open:{api:{path:"http://localhost:8080/"}},run:{phantomjs:{cmd:require("phantomjs-prebuilt").path,args:["--webdriver=4444"],options:{quiet:true,wait:false,ready:/.*GhostDriver.*running.*/i}}},"gh-pages":{options:{silent:true},"crafty-distro-regression-tests":{options:{repo:"https://"+process.env.GH_TOKEN+"@github.com/craftyjs/Crafty-Distro.git",branch:"regression-tests",message:"Auto-generated commit of Travis build "+process.env.TRAVIS_BUILD_NUMBER,user:{name:"Travis",email:"travis@travis-ci.org"},base:"build/webdriver/failed"},src:["**/*.png"]}}});l.loadNpmTasks("grunt-contrib-uglify");l.loadNpmTasks("grunt-contrib-copy");l.loadNpmTasks("grunt-contrib-jshint");l.loadNpmTasks("grunt-contrib-qunit");l.loadNpmTasks("grunt-contrib-watch");l.loadNpmTasks("grunt-contrib-connect");l.loadNpmTasks("grunt-jsvalidate");l.loadNpmTasks("grunt-browserify");l.loadNpmTasks("grunt-banner");l.loadNpmTasks("grunt-qunit-node");l.loadNpmTasks("grunt-saucelabs");l.loadNpmTasks("grunt-gh-pages");l.loadNpmTasks("grunt-run");l.loadNpmTasks("grunt-webdriver");l.registerTask("version","Propagates version changes",function(){var e=l.config.get("pkg");var s=l.option("crafty-version");if(!s){l.warn("No command-line argument '--crafty-version' specified. Rerun the task with '--crafty-version=X.X.X'. You can force a release with the previous version.");s=e.version}if(!semver.gt(s,e.version)){l.warn("Command-line argument '--crafty-version' is not greater than previous version.")}e.version=s;l.config.set("pkg",e);l.file.write("package.json",JSON.stringify(e,null,2));l.file.write("src/core/version.js",'module.exports = "'+s+'";');l.log.ok("Updated version in all files.")});l.registerTask("changelog","Copies changelog to file",function(){var s=this.async();var e=l.option("changelog");if(typeof e==="undefined"){l.fatal("No command-line argument '--changelog' specified. Rerun the task with the appropriate argument value."+EOL+"Use '--changelog=false' to indicate that you DON'T want to update the changelog."+EOL+"Use '--changelog=true' to indicate that you DO want to update the changelog."+" "+"However, first make sure that the release notes on the wiki are updated for the version you are about to release.")}else if(e===true){request.get("https://raw.github.com/wiki/craftyjs/Crafty/Release-Notes.md").on("error",function(e){l.fatal(e)}).on("response",function(e){if(e.statusCode===200){l.log.ok("Successfully retrieved release notes.");s()}else{l.fatal("Error while retrieving release notes: "+e.statusCode)}}).pipe(fs.createWriteStream("CHANGELOG.md"))}});l.registerTask("test-local-browser",["qunit:browser"]);l.registerTask("test-local-node",["qunit-node:node"]);l.registerTask("test-local-webdriver",["run:phantomjs","webdriver:local"]);l.registerTask("test-local",["test-local-browser","test-local-node","test-local-webdriver"]);l.registerTask("test-cloud-browser",["saucelabs-qunit:browser"]);l.registerTask("test-cloud-webdriver",["webdriver:cloud"]);l.registerTask("test-cloud",function(){var e=process.env.TRAVIS_BRANCH;if(process.env.TRAVIS&&e===process.env.SAUCE_BRANCH&&process.env.SAUCE_USERNAME&&process.env.SAUCE_ACCESS_KEY)l.task.run("connect","test-cloud-browser","test-cloud-webdriver")});l.registerTask("build:dev",["browserify:dev","usebanner:dev"]);l.registerTask("build:release",["browserify:release","usebanner:release"]);l.registerTask("api","Generate api documentation",r);l.registerTask("api-server","View dynamically generated docs",t);l.registerTask("view-api",["api","api-server"]);l.registerTask("validate",["jsvalidate","jshint"]);l.registerTask("test",["test-local","test-cloud"]);l.registerTask("check",["build:dev","validate","test"]);l.registerTask("default",["jsvalidate:src","build:dev","jsvalidate:dev"]);l.registerTask("release",["version","changelog","build:release","uglify","jsvalidate:release","api"])};
