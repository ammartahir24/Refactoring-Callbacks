var assert=require("assert");var http=require("http");var onHeaders=require("..");var request=require("supertest");describe("onHeaders(res, listener)",function(){it("should fire after setHeader",function(e){var t=createServer(echoListener);request(t).get("/").expect("X-Outgoing-Echo","test").expect(200,e)});it("should fire before write",function(e){var t=createServer(echoListener,r);function r(e,t){t.setHeader("X-Outgoing","test");t.write("1")}request(t).get("/").expect("X-Outgoing-Echo","test").expect(200,"1",e)});it("should fire with no headers",function(e){var t=createServer(i,r);function r(e,t){}function i(e,t){this.setHeader("X-Headers",Object.keys(this._headers||{}).join(","))}request(t).get("/").expect("X-Headers","").expect(200,e)});it("should fire only once",function(t){var r=0;var e=createServer(n,i);function i(e,t){t.writeHead(200);try{t.writeHead(200)}catch(e){}}function n(e,t){r++}request(e).get("/").expect(200,function(e){if(e)return t(e);assert.strictEqual(r,1);t()})});it("should fire in reverse order",function(e){var t=createServer(echoListener,r);function r(e,t){onHeaders(t,appendHeader(1));onHeaders(t,appendHeader(2));onHeaders(t,appendHeader(3));t.setHeader("X-Outgoing","test")}request(t).get("/").expect("X-Outgoing-Echo","test,3,2,1").expect(200,e)});describe("arguments",function(){describe("res",function(){it("should be required",function(){assert.throws(onHeaders.bind(),/res.*required/)})});describe("listener",function(){it("should be required",function(e){var t=createServer();request(t).get("/").expect(500,/listener.*function/,e)});it("should only accept function",function(e){var t=createServer(42);request(t).get("/").expect(500,/listener.*function/,e)})})});describe("setHeader",function(){it("should be available in listener",function(e){var t=createServer(echoListener);request(t).get("/").expect("X-Outgoing-Echo","test").expect(200,e)})});describe("writeHead(status)",function(){it("should make status available in listener",function(e){var t=createServer(i,r);function r(e,t){t.writeHead(201)}function i(e,t){this.setHeader("X-Status",this.statusCode)}request(t).get("/").expect("X-Status","201").expect(201,e)});it("should allow manipulation of status in listener",function(e){var t=createServer(i,r);function r(e,t){t.writeHead(201)}function i(e,t){this.setHeader("X-Status",this.statusCode);this.statusCode=202}request(t).get("/").expect("X-Status","201").expect(202,e)});it("should pass-through core error",function(e){var t=createServer(appendHeader(1),r);function r(e,t){t.writeHead()}request(t).get("/").expect(500,e)});it("should retain return value",function(r){var i=http.createServer(function(e,t){if(e.url==="/attach"){onHeaders(t,appendHeader(1))}t.end(typeof t.writeHead(200))});request(i).get("/").expect(200,function(e,t){if(e)return r(e);request(i).get("/attach").expect(200,t.text,r)})})});describe("writeHead(status, reason)",function(){it("should be available in listener",function(e){var t=createServer(echoListener,r);function r(e,t){t.setHeader("X-Outgoing","test");t.writeHead(200,"OK")}request(t).get("/").expect("X-Outgoing-Echo","test").expect(200,e)})});describe("writeHead(status, reason, obj)",function(){it("should be available in listener",function(e){var t=createServer(echoListener,r);function r(e,t){t.writeHead(200,"OK",{"X-Outgoing":"test"})}request(t).get("/").expect("X-Outgoing-Echo","test").expect(200,e)})});describe("writeHead(status, obj)",function(){it("should be available in listener",function(e){var t=createServer(i,r);function r(e,t){t.writeHead(201,{"X-Outgoing":"test"})}function i(e,t){this.setHeader("X-Status",this.statusCode);this.setHeader("X-Outgoing-Echo",this.getHeader("X-Outgoing"))}request(t).get("/").expect("X-Status","201").expect("X-Outgoing-Echo","test").expect(201,e)});it("should handle falsy keys",function(e){var t=createServer(i,r);function r(e,t){t.writeHead(201,{"X-Outgoing":"test","":"test"})}function i(e,t){this.setHeader("X-Status",this.statusCode);this.setHeader("X-Outgoing-Echo",this.getHeader("X-Outgoing"))}request(t).get("/").expect("X-Status","201").expect("X-Outgoing-Echo","test").expect(201,e)})});describe("writeHead(status, arr)",function(){it("should be available in listener",function(e){var t=createServer(i,r);function r(e,t){t.writeHead(201,[["X-Outgoing","test"]])}function i(e,t){this.setHeader("X-Status",this.statusCode);this.setHeader("X-Outgoing-Echo",this.getHeader("X-Outgoing"))}request(t).get("/").expect("X-Status","201").expect("X-Outgoing-Echo","test").expect(201,e)})})});function createServer(r,e){var i=e||echoHandler;return http.createServer(function(e,t){try{onHeaders(t,r);i(e,t);t.statusCode=200}catch(e){t.statusCode=500;t.write(e.message)}finally{t.end()}})}function appendHeader(t){return function e(){this.setHeader("X-Outgoing",this.getHeader("X-Outgoing")+","+t)}}function echoHandler(e,t){t.setHeader("X-Outgoing","test")}function echoListener(){this.setHeader("X-Outgoing-Echo",this.getHeader("X-Outgoing"))}
